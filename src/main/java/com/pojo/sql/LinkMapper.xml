<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.LinkMapper" >
  <resultMap id="BaseResultMap" type="com.pojo.Link" >
    <result column="NODE_ID" property="nodeId" jdbcType="BIGINT" />
    <result column="IF_ID" property="ifId" jdbcType="BIGINT" />
    <result column="NETWORK_ID" property="networkId" jdbcType="BIGINT" />
    <result column="SPEED_IF_ID" property="speedIfId" jdbcType="BIGINT" />
    <result column="ISDELETED" property="isdeleted" jdbcType="BIGINT" />
    <result column="EDGE_NAME" property="edgeName" jdbcType="VARCHAR" />
    <result column="TYPE" property="type" jdbcType="BIGINT" />
    <result column="IS_HIDE" property="isHide" jdbcType="BIGINT" />
    <result column="REFER_SRV_ID" property="referSrvId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    NODE_ID, IF_ID, NETWORK_ID, SPEED_IF_ID, ISDELETED, EDGE_NAME, `TYPE`, IS_HIDE, REFER_SRV_ID
  </sql>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pojo.LinkExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from link
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleAndPage" resultMap="BaseResultMap" parameterType="com.pojo.LinkExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from link
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.pojo.LinkExample" >
    delete from link
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.pojo.LinkExample" resultType="java.lang.Integer" >
    select count(*) from link
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update link
    <set >
      <if test="record.nodeId != null" >
        NODE_ID = #{record.nodeId,jdbcType=BIGINT},
      </if>
      <if test="record.ifId != null" >
        IF_ID = #{record.ifId,jdbcType=BIGINT},
      </if>
      <if test="record.networkId != null" >
        NETWORK_ID = #{record.networkId,jdbcType=BIGINT},
      </if>
      <if test="record.speedIfId != null" >
        SPEED_IF_ID = #{record.speedIfId,jdbcType=BIGINT},
      </if>
      <if test="record.isdeleted != null" >
        ISDELETED = #{record.isdeleted,jdbcType=BIGINT},
      </if>
      <if test="record.edgeName != null" >
        EDGE_NAME = #{record.edgeName,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        `TYPE` = #{record.type,jdbcType=BIGINT},
      </if>
      <if test="record.isHide != null" >
        IS_HIDE = #{record.isHide,jdbcType=BIGINT},
      </if>
      <if test="record.referSrvId != null" >
        REFER_SRV_ID = #{record.referSrvId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update link
    set NODE_ID = #{record.nodeId,jdbcType=BIGINT},
      IF_ID = #{record.ifId,jdbcType=BIGINT},
      NETWORK_ID = #{record.networkId,jdbcType=BIGINT},
      SPEED_IF_ID = #{record.speedIfId,jdbcType=BIGINT},
      ISDELETED = #{record.isdeleted,jdbcType=BIGINT},
      EDGE_NAME = #{record.edgeName,jdbcType=VARCHAR},
      `TYPE` = #{record.type,jdbcType=BIGINT},
      IS_HIDE = #{record.isHide,jdbcType=BIGINT},
      REFER_SRV_ID = #{record.referSrvId,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <insert id="insert" parameterType="com.pojo.Link" >
    insert into link (NODE_ID, IF_ID, NETWORK_ID, 
      SPEED_IF_ID, ISDELETED, EDGE_NAME, 
      `TYPE`, IS_HIDE, REFER_SRV_ID
      )
    values (#{nodeId,jdbcType=BIGINT}, #{ifId,jdbcType=BIGINT}, #{networkId,jdbcType=BIGINT}, 
      #{speedIfId,jdbcType=BIGINT}, #{isdeleted,jdbcType=BIGINT}, #{edgeName,jdbcType=VARCHAR}, 
      #{type,jdbcType=BIGINT}, #{isHide,jdbcType=BIGINT}, #{referSrvId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pojo.Link" >
    insert into link
    <trim prefix="(" suffix=")" suffixOverrides="," >
      NODE_ID,
      IF_ID,
      NETWORK_ID,
      SPEED_IF_ID,
      ISDELETED,
      EDGE_NAME,
      `TYPE`,
      IS_HIDE,
      REFER_SRV_ID,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{nodeId,jdbcType=BIGINT},
      #{ifId,jdbcType=BIGINT},
      #{networkId,jdbcType=BIGINT},
      #{speedIfId,jdbcType=BIGINT},
      #{isdeleted,jdbcType=BIGINT},
      #{edgeName,jdbcType=VARCHAR},
      #{type,jdbcType=BIGINT},
      #{isHide,jdbcType=BIGINT},
      #{referSrvId,jdbcType=BIGINT},
    </trim>
  </insert>
</mapper>